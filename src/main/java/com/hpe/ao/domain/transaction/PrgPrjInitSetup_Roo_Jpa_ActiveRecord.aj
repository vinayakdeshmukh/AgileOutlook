// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.hpe.ao.domain.transaction;

import com.hpe.ao.domain.transaction.PrgPrjInitSetup;
import java.util.List;
import org.springframework.transaction.annotation.Transactional;

privileged aspect PrgPrjInitSetup_Roo_Jpa_ActiveRecord {
    
    public static final List<String> PrgPrjInitSetup.fieldNames4OrderClauseFilter = java.util.Arrays.asList("program1", "orgName", "startDateBaseline", "project11", "project11TeamCount", "project11TeamSize", "project11TeamAveragePointDaily", "release111", "project12", "project12TeamCount", "project12TeamSize", "project12TeamAveragePointDaily", "release121", "project13", "project13TeamCount", "project13TeamSize", "project13TeamAveragePointDaily", "release131", "application111", "application112", "application113", "application114", "application121", "application122", "application123", "application124", "application131", "application132", "application133", "application134");
    
    public static long PrgPrjInitSetup.countPrgPrjInitSetups() {
        return entityManager().createQuery("SELECT COUNT(o) FROM PrgPrjInitSetup o", Long.class).getSingleResult();
    }
    
    public static List<PrgPrjInitSetup> PrgPrjInitSetup.findAllPrgPrjInitSetups() {
        return entityManager().createQuery("SELECT o FROM PrgPrjInitSetup o", PrgPrjInitSetup.class).getResultList();
    }
    
    public static List<PrgPrjInitSetup> PrgPrjInitSetup.findAllPrgPrjInitSetups(String sortFieldName, String sortOrder) {
        String jpaQuery = "SELECT o FROM PrgPrjInitSetup o";
        if (fieldNames4OrderClauseFilter.contains(sortFieldName)) {
            jpaQuery = jpaQuery + " ORDER BY " + sortFieldName;
            if ("ASC".equalsIgnoreCase(sortOrder) || "DESC".equalsIgnoreCase(sortOrder)) {
                jpaQuery = jpaQuery + " " + sortOrder;
            }
        }
        return entityManager().createQuery(jpaQuery, PrgPrjInitSetup.class).getResultList();
    }
    
    public static PrgPrjInitSetup PrgPrjInitSetup.findPrgPrjInitSetup(Long id) {
        if (id == null) return null;
        return entityManager().find(PrgPrjInitSetup.class, id);
    }
    
    public static List<PrgPrjInitSetup> PrgPrjInitSetup.findPrgPrjInitSetupEntries(int firstResult, int maxResults) {
        return entityManager().createQuery("SELECT o FROM PrgPrjInitSetup o", PrgPrjInitSetup.class).setFirstResult(firstResult).setMaxResults(maxResults).getResultList();
    }
    
    public static List<PrgPrjInitSetup> PrgPrjInitSetup.findPrgPrjInitSetupEntries(int firstResult, int maxResults, String sortFieldName, String sortOrder) {
        String jpaQuery = "SELECT o FROM PrgPrjInitSetup o";
        if (fieldNames4OrderClauseFilter.contains(sortFieldName)) {
            jpaQuery = jpaQuery + " ORDER BY " + sortFieldName;
            if ("ASC".equalsIgnoreCase(sortOrder) || "DESC".equalsIgnoreCase(sortOrder)) {
                jpaQuery = jpaQuery + " " + sortOrder;
            }
        }
        return entityManager().createQuery(jpaQuery, PrgPrjInitSetup.class).setFirstResult(firstResult).setMaxResults(maxResults).getResultList();
    }
    
    @Transactional
    public PrgPrjInitSetup PrgPrjInitSetup.merge() {
        if (this.entityManager == null) this.entityManager = entityManager();
        PrgPrjInitSetup merged = this.entityManager.merge(this);
        this.entityManager.flush();
        return merged;
    }
    
}
